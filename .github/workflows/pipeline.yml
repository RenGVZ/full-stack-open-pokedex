name: Deployment Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches: [master]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - name: Check style
        run: npm run eslint
      - name: Build project for production
        run: npm run build
      - name: Test
        run: npm run test

      - name: e2e Tests
        uses: cypress-io/github-action@v5
        with:
          command: npm run test:e2e
          start: npm run start-prod
          wait-on: http://localhost:4000

  skip_if_commit_contains_skip:
    name: Skip if commit contains [skip] in message
    runs-on: ubuntu-20.04
    if: ${{ contains(github.event.head_commit.message, '[skip]') }}
    steps:
      - uses: actions/checkout@v2
      - name: github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: commits
        env:
          COMMITS: ${{ toJson(github.event.commits) }}
        run: echo "$COMMITS"
      - name: commit messages
        env:
          COMMIT_MESSAGES: ${{ toJson(github.event.commits.message) }}
        run: echo "$COMMIT_MESSAGES"
      - name: Skip if commit contains [skip]
        run: exit 1

  tag_release:
    needs: [simple_deployment_pipeline, skip_if_commit_contains_skip]
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}
          fetch-depth: '0'
      - name: Add tag
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          PRERELEASE: true

  deploy:
    name: Deploy app
    needs: skip_if_commit_contains_skip
    runs-on: ubuntu-20.04
    if: ${{ github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}